const devmode=!1,sidebarWidth=380,canvas=document.getElementById("planetCanvas"),ctx=canvas.getContext("2d");let dragStartX,dragStartY,scale=1,offsetX=0,offsetY=0,isDragging=!1;function updateCanvasSize(){const e=window.innerWidth-380,t=window.innerHeight;canvas.width=e,canvas.height=t,canvas.style.width=e+"px",canvas.style.height=t+"px"}updateCanvasSize(),window.addEventListener("resize",(()=>{updateCanvasSize(),clampOffset(),drawPlanets()}));let allPlanets=[],playablePlanetsSet=new Set,selectedBiome=null;const planetRadius=8;let hoveredPlanet=null;const backgroundImg=new Image;backgroundImg.src="images/sectors_upscaled_dimmed_nolabel.png",backgroundImg.onload=()=>drawPlanets();const biomeImageCache=new Map,ownerColors={Humans:"cyan",Automaton:"red",Terminids:"yellow",Illuminate:"purple"},hideUnplayableMap=new Map;let hideUnplayable=!1;const pinnedBiomesMap=new Map;async function loadPlanetsData(){try{const e=Math.random().toString(36).substring(2,10),t=await fetch("https://api.helldivers2.dev/api/v1/planets",{headers:{accept:"application/json","X-Super-Client":e,"X-Super-Contact":e}}),a=await t.json(),n=await fetch("https://api.helldivers2.dev/api/v1/campaigns",{headers:{accept:"application/json","X-Super-Client":e,"X-Super-Contact":e}}),s=await n.json();allPlanets=a,playablePlanetsSet=new Set(s.map((e=>e.planet.index))),drawPlanets()}catch(e){console.error("Failed to load planets or campaigns data",e)}}function clampOffset(){if(!canvas.width||!canvas.height)return;const e=500,t=canvas.width*scale,a=canvas.height*scale,n=Math.min(e,canvas.width-t-e),s=Math.max(e,e),l=Math.min(e,canvas.height-a-e),o=Math.max(e,e);offsetX=t<=canvas.width?Math.min(s,Math.max(n,offsetX)):Math.min(e,Math.max(canvas.width-t-e,offsetX)),offsetY=a<=canvas.height?Math.min(o,Math.max(l,offsetY)):Math.min(e,Math.max(canvas.height-a-e,offsetY))}fetch("biomes.json").then((e=>e.json())).then((e=>{const t=document.getElementById("biomeList");e.sort(((e,t)=>t.hippos-e.hippos));const a=new Image;a.src="images/default.jpg",biomeImageCache.set("",a);const n=document.createElement("div");n.className="biome selected",n.dataset.name="";const s=document.createElement("img");s.src="images/default.jpg",s.alt="All Biomes",s.title="Show All Planets",n.appendChild(s);const l=document.createElement("div");function o(e,t){const a=pinnedBiomesMap.get(t),n=""===t?"All Biomes":t;e.querySelector(".hover-name").textContent=a?n+" (Pinned)":n}function i(e,t){const a=pinnedBiomesMap.get(t),n=e.querySelector(".toggle");n&&(a?(n.classList.add("on"),n.classList.remove("off")):(n.classList.remove("on"),n.classList.add("off")))}function c(e){document.querySelectorAll(".biome").forEach((e=>e.classList.remove("selected"))),e.classList.add("selected")}l.className="hover-name",n.appendChild(l),t.appendChild(n),pinnedBiomesMap.set("",!1),e.forEach((e=>pinnedBiomesMap.set(e.name,!1))),o(n,""),i(n,""),n.addEventListener("click",(()=>{null===selectedBiome||(selectedBiome=null,c(n),o(n,""),i(n,""),document.querySelectorAll(".biome").forEach((e=>{e!==n&&e.classList.remove("selected")})),drawPlanets())})),e.forEach((e=>{const a=document.createElement("div");a.className="biome",a.dataset.name=e.name;const s=new Image;s.src=e.image,biomeImageCache.set(e.name,s);const l=document.createElement("img");l.src=e.image,l.alt=e.name,l.title=e.name,a.appendChild(l);const d=document.createElement("div");d.className="toggle-wrapper";const r=document.createElement("div");r.className="toggle off",d.appendChild(r);const m=document.createElement("div");m.className="toggle-circle",r.appendChild(m);const h=document.createElement("div");h.className="unplayable-indicator",d.appendChild(h),a.appendChild(d);const g=document.createElement("div");g.className="hover-name",a.appendChild(g);const u=document.createElement("div");if(u.className="hippo-dots",e.hippos>0){const t=Math.min(e.hippos,5);for(let e=0;e<t;e++){const e=document.createElement("div");e.className="hippo-dot yellow",u.appendChild(e)}}else{const e=document.createElement("div");e.className="hippo-dot",u.appendChild(e)}a.appendChild(u),t.appendChild(a),o(a,e.name),i(a,e.name),a.addEventListener("click",(()=>{const t=e.name;if(selectedBiome!==t)selectedBiome=t,c(a),o(a,t),i(a,t),n.classList.remove("selected"),drawPlanets();else{const e=pinnedBiomesMap.get(t);pinnedBiomesMap.set(t,!e),a.classList.toggle("pinned"),o(a,t),i(a,t),drawPlanets()}}))}))})),loadPlanetsData(),canvas.addEventListener("wheel",(e=>{e.preventDefault();const t=canvas.getBoundingClientRect(),a=e.clientX-t.left,n=e.clientY-t.top,s=(a-offsetX)/scale,l=(n-offsetY)/scale,o=e.deltaY<0?1.1:.9;scale*=o,scale=Math.min(Math.max(scale,.5),10),offsetX=a-s*scale,offsetY=n-l*scale,clampOffset(),drawPlanets()}),{passive:!1}),canvas.addEventListener("mousedown",(e=>{isDragging=!0,dragStartX=e.clientX-offsetX,dragStartY=e.clientY-offsetY,canvas.style.cursor="grabbing"})),window.addEventListener("mouseup",(e=>{isDragging=!1,canvas.style.cursor="grab"})),window.addEventListener("mousemove",(e=>{isDragging&&(offsetX=e.clientX-dragStartX,offsetY=e.clientY-dragStartY,clampOffset(),drawPlanets())})),canvas.addEventListener("mousemove",(e=>{const t=canvas.getBoundingClientRect(),a=e.clientX-t.left,n=e.clientY-t.top;hoveredPlanet=null;for(const e of allPlanets){const t=!0===pinnedBiomesMap.get(e.biome.name);if(selectedBiome&&e.biome.name!==selectedBiome&&!t)continue;if((hideUnplayableMap.get(selectedBiome??"")??!1)&&!playablePlanetsSet.has(e.index))continue;const s=a-((e.position.x+1)/2*canvas.width*scale+offsetX),l=n-((1-(e.position.y+1)/2)*canvas.height*scale+offsetY);if(Math.sqrt(s*s+l*l)<=planetRadius*scale){hoveredPlanet=e;break}}drawPlanets()}));let lastTouchDist=null,lastTouchCenter=null,isTouchPanning=!1;function getTouchDist(e){const t=e[0].clientX-e[1].clientX,a=e[0].clientY-e[1].clientY;return Math.sqrt(t*t+a*a)}function getTouchCenter(e){return{x:(e[0].clientX+e[1].clientX)/2,y:(e[0].clientY+e[1].clientY)/2}}function drawPlanets(){if(ctx.clearRect(0,0,canvas.width,canvas.height),ctx.save(),ctx.setTransform(scale,0,0,scale,offsetX,offsetY),ctx.drawImage(backgroundImg,0,0,canvas.width,canvas.height),ctx.restore(),allPlanets.filter((e=>!(hideUnplayable&&!playablePlanetsSet.has(e.index))&&(!0===pinnedBiomesMap.get(e.biome.name)||(!selectedBiome||e.biome.name===selectedBiome)))).forEach((e=>{const t=(e.position.x+1)/2*canvas.width*scale+offsetX,a=(1-(e.position.y+1)/2)*canvas.height*scale+offsetY,n=.5*planetRadius,s=1.5*planetRadius;let l=planetRadius*scale;l=Math.min(Math.max(l,n),s);const o=playablePlanetsSet.has(e.index);if("Humans"===e.currentOwner&&e.event?.faction){const n=ownerColors[e.event.faction]||"white",s=ownerColors.Humans||"white";drawHalfCirclePoly(t,a,l,Math.PI/2,3*Math.PI/2,n),drawHalfCirclePoly(t,a,l,-Math.PI/2,Math.PI/2,s)}else ctx.beginPath(),ctx.arc(t,a,l,0,2*Math.PI),ctx.fillStyle=o?ownerColors[e.currentOwner]||"white":"grey",ctx.fill();let i=12*scale;i=Math.min(Math.max(i,10),16),ctx.fillStyle=o?"white":"#777",ctx.font=`${i}px Arial`,ctx.textBaseline="alphabetic",ctx.fillText(e.name,t+l+5,a+i/3)})),hoveredPlanet)drawPopup(hoveredPlanet);else{const e=document.getElementById("sectorName");e.style.display="none",e.querySelector("h1").innerText=""}}function drawPopup(e){if(hideUnplayable&&!playablePlanetsSet.has(e.index))return!1;const t=document.getElementById("sectorName");t.style.display="block",t.querySelector("h1").innerText=e.sector+" Sector";const a=(e.position.x+1)/2*canvas.width*scale+offsetX,n=(1-(e.position.y+1)/2)*canvas.height*scale+offsetY,s=10,l=260*.6667,o=e.hazards?e.hazards.length:0,i=l+20,c=112+18*o+20,d=n-c/2;ctx.fillStyle="rgba(0, 122, 204, 0.8)",roundRect(ctx,a+15,d,i,c,10),ctx.fill(),ctx.fillStyle="white",ctx.font="bold 16px Arial",ctx.textBaseline="top";let r=d+s;ctx.fillText(e.name,a+15+s,r),r+=16,r+=5,ctx.strokeStyle="white",ctx.lineWidth=2,ctx.beginPath(),ctx.moveTo(a+15+s,r),ctx.lineTo(a+15+i-s,r),ctx.stroke(),r+=7,ctx.fillText(e.biome.name,a+15+s,r),r+=24;const m=biomeImageCache.get(e.biome.name);m&&m.complete&&ctx.drawImage(m,a+15+s,r,l,60),r+=70,o>0&&(ctx.font="14px Arial",ctx.textBaseline="top",e.hazards.forEach(((e,t)=>{ctx.fillText(`â€¢ ${e.name}`,a+15+s,r+18*t)})))}function measureWrappedText(e,t,a,n){const s=t.split(" ");let l="",o=0;for(let t=0;t<s.length;t++){const n=l+s[t]+(t<s.length-1?" ":""),i=e.measureText(n).width;console.log(`Test line: "${n}", width: ${i}`),i>a&&""!==l?(o++,console.log("maxwidth",a),console.log(`Line wrapped: "${l.trim()}"`),l=s[t]+" "):l=n}return""!==l.trim()&&(o++,console.log(`Last line: "${l.trim()}"`)),console.log("maxwidth",a),console.log(`Total lines: ${o}`),o*n}function drawWrappedText(e,t,a,n,s,l){console.log("max width in drawing",s);const o=t.split(" ");let i="",c=0;for(let t=0;t<o.length;t++){const d=i+o[t]+" ",r=e.measureText(d).width;console.log("width in drawing",r),r>s&&t>0?(e.fillText(i.trim(),a,n+c*l),i=o[t]+" ",c++):i=d}e.fillText(i.trim(),a,n+c*l)}function roundRect(e,t,a,n,s,l){e.beginPath(),e.moveTo(t+l,a),e.lineTo(t+n-l,a),e.quadraticCurveTo(t+n,a,t+n,a+l),e.lineTo(t+n,a+s-l),e.quadraticCurveTo(t+n,a+s,t+n-l,a+s),e.lineTo(t+l,a+s),e.quadraticCurveTo(t,a+s,t,a+s-l),e.lineTo(t,a+l),e.quadraticCurveTo(t,a,t+l,a),e.closePath()}function drawHalfCirclePoly(e,t,a,n,s,l){ctx.beginPath(),ctx.moveTo(e,t);for(let l=0;l<=40;l++){let o=n+l/40*(s-n),i=e+Math.cos(o)*a,c=t+Math.sin(o)*a;ctx.lineTo(i,c)}ctx.closePath(),ctx.fillStyle=l,ctx.fill()}canvas.addEventListener("touchstart",(e=>{1===e.touches.length?(isDragging=!0,dragStartX=e.touches[0].clientX-offsetX,dragStartY=e.touches[0].clientY-offsetY,isTouchPanning=!0):2===e.touches.length&&(isDragging=!1,isTouchPanning=!1,lastTouchDist=getTouchDist(e.touches),lastTouchCenter=getTouchCenter(e.touches))}),{passive:!1}),canvas.addEventListener("touchmove",(e=>{if(e.preventDefault(),1===e.touches.length&&isTouchPanning)offsetX=e.touches[0].clientX-dragStartX,offsetY=e.touches[0].clientY-dragStartY,clampOffset(),drawPlanets();else if(2===e.touches.length){const t=getTouchDist(e.touches),a=getTouchCenter(e.touches);if(lastTouchDist&&lastTouchCenter){const e=t/lastTouchDist,n=Math.min(Math.max(scale*e,.5),10),s=(a.x-offsetX)/scale,l=(a.y-offsetY)/scale;scale=n,offsetX=a.x-s*scale,offsetY=a.y-l*scale,clampOffset(),drawPlanets()}lastTouchDist=t,lastTouchCenter=a,isTouchPanning=!1}}),{passive:!1}),canvas.addEventListener("touchend",(e=>{e.touches.length<2&&(lastTouchDist=null,lastTouchCenter=null),0===e.touches.length&&(isDragging=!1,isTouchPanning=!1)}));const hamburgerBtn=document.getElementById("hamburgerBtn"),biomeList=document.getElementById("biomeList");function updateCanvasRight(){const e=biomeList.classList.contains("closed"),t=window.innerWidth;canvas.style.right=t<=480?e?"0":"80vw":e?"0":"380px"}biomeList.classList.remove("closed"),hamburgerBtn.classList.remove("closed"),hamburgerBtn.setAttribute("aria-expanded","true"),hamburgerBtn.addEventListener("click",(()=>{biomeList.classList.toggle("closed"),hamburgerBtn.classList.toggle("closed"),hideBtn.classList.toggle("closed"),dialogBtn.classList.toggle("closed");const e=!biomeList.classList.contains("closed");hamburgerBtn.setAttribute("aria-expanded",e?"true":"false"),updateCanvasRight();const t=window.innerWidth,a=e?t<=480?.8*t:380:0;canvas.width=t-a,canvas.height=window.innerHeight,canvas.style.width=t-a+"px",canvas.style.height=window.innerHeight+"px",clampOffset(),drawPlanets()})),window.addEventListener("resize",updateCanvasRight);const hideBtn=document.getElementById("hideBtn");hideBtn.addEventListener("click",(()=>{hideUnplayable=!hideUnplayable,hideBtn.classList.toggle("on"),drawPlanets()}));const dialogBtn=document.getElementById("dialogBtn"),closeDialogBtn=document.getElementById("closeDialogBtn"),overlay=document.getElementById("overlay"),dialogBox=document.getElementById("dialogBox");dialogBtn.addEventListener("click",(()=>{overlay.classList.add("visible"),dialogBox.classList.add("visible")})),closeDialogBtn.addEventListener("click",(()=>{overlay.classList.remove("visible"),dialogBox.classList.remove("visible")})),overlay.addEventListener("click",(()=>{overlay.classList.remove("visible"),dialogBox.classList.remove("visible")})),document.querySelectorAll(".mock-hideBtn").forEach((e=>{e.addEventListener("click",(()=>{e.classList.toggle("on")}))}));const mockToggle=document.querySelector(".mock-toggle");mockToggle.addEventListener("click",(()=>{mockToggle.classList.toggle("on");const e=mockToggle.classList.contains("on");mockToggle.setAttribute("aria-pressed",e?"true":"false")}));